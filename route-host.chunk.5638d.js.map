{"version":3,"sources":["webpack:///./routes/host/index.js","webpack:///./routes/host/style.css"],"names":["shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","Host","state","time","Date","now","count","deck","Array","fill","map","e","i","value","place","board","updateTime","setState","increment","next","card","cards","slice","suit","number","path","class","style","src","aligner","key","alignedItem","componentDidMount","this","timer","setInterval","componentWillUnmount","clearInterval","renderRow","hearts","spades","diamonds","clubs","row","render","_","profile","onClick","Component","module","exports"],"mappings":"kxBAGA,SAASA,EAAQC,GAIhB,IAHA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAGlB,IAAMD,GAGZD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAIzCF,EAAiBD,EAHjBG,GAAgB,GAIhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGtB,OAAOD,E,oFAGaQ,E,oJACpBC,MAAQ,CACPC,KAAMC,KAAKC,MACXC,OAAQ,EACRC,KAAMf,EAAQgB,MAAM,IAAIC,MAAK,GAAOC,KAAI,SAACC,EAAGC,GAAJ,MAAW,CAACC,MAAOF,EAAGG,MAAOF,OACrEG,MAAOP,MAAM,IAAIC,Q,EAIlBO,WAAa,WACZ,EAAKC,SAAS,CAAEd,KAAMC,KAAKC,S,EAG5Ba,UAAY,WAEX,IAAMC,EAAO,EAAKjB,MAAMI,MAAQ,EAC5BC,EAAO,GAAH,OAAO,EAAKL,MAAMK,MAGtBa,EAAO,EAAH,KAAQb,EAAKY,IAAb,IAAoBN,OAAO,IACnCN,EAAKY,GAAQC,EAGb,IAAIL,EAAQ,GAAH,OAAO,EAAKb,MAAMa,OAC3BA,EAAMK,EAAKN,OAASM,EAEpB,EAAKH,SAAS,CACbX,MAAO,EAAKJ,MAAMI,MAAQ,EAC1BC,OACAQ,W,EAeFM,MAAQ,SAACC,EAAOC,GAAR,OAAiBD,EAAMZ,KAAI,SAACC,EAAGC,GACtC,GAAID,EAAG,CACN,IAAIa,EAAUb,EAAEG,MAAM,GAAI,EAEZ,IAAVU,EACHA,EAAS,OACW,IAAVA,EACVA,EAAS,QACW,IAAVA,EACVA,EAAS,OACW,IAAVA,IACVA,EAAS,OAEV,IAAMC,EAAO,kCAAkCD,EAArC,OAAkDD,EAAlD,OACV,OAAQ,mBAAKG,MAAOC,IAAMP,KAAMQ,IAAKH,IAItC,OACC,iBAAGC,MAAUC,IAAME,QAAX,IAAsBF,IAAMP,KAAQU,IAAKlB,GAChD,oBAAMc,MAAOC,IAAMI,aAAnB,U,4HA9BHC,kBAAA,WAECC,KAAKC,MAAQC,YAAYF,KAAKjB,WAAY,M,EAI3CoB,qBAAA,WACCC,cAAcJ,KAAKC,Q,EA2BpBI,UAAA,WACC,IAAMC,EAASN,KAAKZ,MAAMY,KAAK/B,MAAMa,MAAMO,MAAM,EAAG,IAAK,UACnDkB,EAASP,KAAKZ,MAAMY,KAAK/B,MAAMa,MAAMO,MAAM,GAAI,IAAK,UACpDmB,EAAWR,KAAKZ,MAAMY,KAAK/B,MAAMa,MAAMO,MAAM,GAAI,IAAK,YACtDoB,EAAQT,KAAKZ,MAAMY,KAAK/B,MAAMa,MAAMO,MAAM,GAAI,IAAK,SAEzD,OAAO,uBACN,mBAAKI,MAAOC,IAAMgB,KAAMJ,GACxB,mBAAKb,MAAOC,IAAMgB,KAAMH,GACxB,mBAAKd,MAAOC,IAAMgB,KAAMF,GACxB,mBAAKf,MAAOC,IAAMgB,KAAMD,K,EAI1BE,OAAA,SAAOC,EAAP,GAAqB,IAATvC,EAAS,EAATA,MACX,OACC,mBAAKoB,MAAOC,IAAMmB,SACjB,qBACC,sBAAQC,QAASd,KAAKf,WAAtB,aACC,IAFF,gBAGeZ,EAAM,EAHrB,KAKC2B,KAAKK,c,GA1FwBU,c,iBCrBlCC,EAAOC,QAAU,CAAC,QAAU,iBAAiB,IAAM,aAAa,KAAO,cAAc,QAAU,iBAAiB,YAAc","file":"route-host.chunk.5638d.js","sourcesContent":["import { h, Component } from 'preact';\nimport style from './style';\n\nfunction shuffle(array) {\n\tlet currentIndex = array.length, temporaryValue, randomIndex;\n\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\n\treturn array;\n}\n\nexport default class Host extends Component {\n\tstate = {\n\t\ttime: Date.now(),\n\t\tcount: -1,\n\t\tdeck: shuffle(Array(52).fill(false).map((e, i) => ({value: e, place: i}))),\n\t\tboard: Array(52).fill(),\n\t};\n\n\t// update the current time\n\tupdateTime = () => {\n\t\tthis.setState({ time: Date.now() });\n\t};\n\n\tincrement = () => {\n\t\t// draw the next card\n\t\tconst next = this.state.count + 1;\n\t\tlet deck = [...this.state.deck]; \n\t\t\n\t\t// change the value to \"seen\" as reference for the board\n\t\tlet card = { ...deck[next], value: true };\n\t\tdeck[next] = card;\n\n\t\t// determine where on the board the card will be displayed\n\t\tlet board = [...this.state.board]; \n\t\tboard[card.place] = card;\n\n\t\tthis.setState({ \n\t\t\tcount: this.state.count + 1,\n\t\t\tdeck,\n\t\t\tboard,\n\t\t });\n\t};\n\n\t// gets called when this route is navigated to\n\tcomponentDidMount() {\n\t\t// start a timer for the clock:\n\t\tthis.timer = setInterval(this.updateTime, 1000);\n\t}\n\n\t// gets called just before navigating away from the route\n\tcomponentWillUnmount() {\n\t\tclearInterval(this.timer);\n\t}\n\n\tcards = (slice, suit) => slice.map((e, i) => {\n\t\tif (e) {\n\t\t\tlet number = (e.place%13)+2;\n\n\t\t\tif (number == 11) {\n\t\t\t\tnumber = 'jack';\n\t\t\t} else if (number == 12) {\n\t\t\t\tnumber = 'queen';\n\t\t\t} else if (number == 13) {\n\t\t\t\tnumber = 'king'\n\t\t\t} else if (number == 14) {\n\t\t\t\tnumber = 'ace'\n\t\t\t}\n\t\t\tconst path = `preact-pokeno/assets/svg-cards/${number}_of_${suit}.svg`;\n\t\t\treturn (<img class={style.card} src={path} />);\n\t\t\t\n\t\t}\n\n\t\treturn (\n\t\t\t<p class={`${style.aligner} ${style.card}`} key={i}>\n\t\t\t\t<span class={style.alignedItem}>-</span>\n\t\t\t</p>);\n\t});\n\n\trenderRow() {\n\t\tconst hearts = this.cards(this.state.board.slice(0, 13), 'hearts');\n\t\tconst spades = this.cards(this.state.board.slice(13, 26), 'spades');\n\t\tconst diamonds = this.cards(this.state.board.slice(26, 39), 'diamonds');\n\t\tconst clubs = this.cards(this.state.board.slice(39, 52), 'clubs');\n\n\t\treturn <div>\n\t\t\t<div class={style.row}>{hearts}</div>\n\t\t\t<div class={style.row}>{spades}</div>\n\t\t\t<div class={style.row}>{diamonds}</div>\n\t\t\t<div class={style.row}>{clubs}</div>\n\t\t</div>;\n\t}\n\n\trender(_, { count }) {\n\t\treturn (\n\t\t\t<div class={style.profile}>\n\t\t\t\t<p>\n\t\t\t\t\t<button onClick={this.increment}>Draw Card</button>\n\t\t\t\t\t{' '}\n\t\t\t\t\tCards drawn: {count+1}.\n\t\t\t\t</p>\n\t\t\t\t{this.renderRow()}\n\t\t\t</div>\n\t\t);\n\t}\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile__3PvkN\",\"row\":\"row__rzARo\",\"card\":\"card__36gup\",\"aligner\":\"aligner__2pRFQ\",\"alignedItem\":\"alignedItem__3WaZy\"};"],"sourceRoot":""}